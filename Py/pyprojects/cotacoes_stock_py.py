# -*- coding: utf-8 -*-
"""cotacoes_stock_py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15ECM1AcP-c1w5TXk_4tjQ1I-C7vkrGnK

"from pandas_datareader import data as web
import pandas as pd
import matplotlib.pyplot as plt

#cotacao_bovespa = web.DataReader('ticker ORIGINAL.SA- mglu3.sa',source="yahoo",start="data de inicio",end="data de termino")
#cotacao_bovespa = web.DataReader(f'^BVSP', data_source='yahoo', start=f'02-20-2020', end='02-20-2021')
#display(cotacao_bovespa)

import pandas
from pandas_datareader import data as pdr
import yfinance as yfin
yfin.pdr_override()



df = pdr.get_data_yahoo(f'^BVSP', start=f'02-20-2020', end='02-20-2021')
print(df)
"""

pip install yfinance

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import yfinance as yf
import datetime

chamada_api = yf.Ticker('PETR4.SA').history(period="50mo")
chamada_api

ativos = ["MXRF11.SA","XPML11.SA","HGLG11.SA","KNRI11.SA","XPLG11.SA"]

df1 = pd.DataFrame()
contador = 0
datas = []


for ativo in ativos:
  chamada_api = yf.Ticker(ativo).history(period="36mo")
  closes = chamada_api["Close"].values
  df1[ativo] = closes
  if contador == 0:
    contador = contador+1
    datas.append(list(chamada_api["Close"].index))

df1["Datas"] = datas[0]
df1 = df1.set_index("Datas",drop=True)
df1

df1.plot(figsize=(15,10))

df1_log_retruns = np.log(df1/df1.shift(1)).fillna(0)
df1_log_retruns.describe()

fig2,[ax1,ax2] = plt.subplots(2,1,figsize =(15,15))
for ativo in ativos:
  ax1.plot(datas[0],df1_log_retruns[ativo].values)
  ax2.hist(df1_log_retruns[ativo].values,bins = 50)

plt.show()

pip install xlrd

ativos_ibrx =list( pd.read_excel("ibrx.xls")["CÃ³digo"].values )
ativos_ibrx

df_scan = pd.DataFrame()
for ativo in ativos_ibrx:
  df2 = pd.DataFrame()
  chamada_api = yf.Ticker(ativo+".SA")
  closes = chamada_api.history(period="36mo")["Close"]
  dividendos = chamada_api.history(period="36mo")["Dividends"].values
  datas = list(chamada_api.history(period="36mo").index)

  df2["Closes"] = closes
  df2["Dividendos"] = dividendos
  df2["Datas"] = datas
  df2 = df2.set_index("Datas",drop=True)

  soma_dividendos = 0

  for k,v in df2.iterrows():
    if k.year == 2022 or k.year == 2021:
      soma_dividendos +=v["Dividendos"]

  dividend_yield = ((soma_dividendos/2) / df2["Closes"].values[-1])*100

  df_scan[ativo] = [dividend_yield]

df_scan.transpose().sort_values(by=0,ascending=False)[:20]
#acoes que pagaram mais dividendos nos ultimos 2 anos