# -*- coding: utf-8 -*-
"""gerando_audios_py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wK5I7U4yrvPwFFKm27UaWNxz389Xty9t
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.io import wavfile
import IPython

"""Geração de uma nota pura
yt = A.cos(wt) = A.cos(2pift)

"""

samplerate = 44100
tEnd=10
t = np.linspace(0,tEnd,samplerate*tEnd) #tempo

fs = 440
A=1
a440 = A*np.sin(2*np.pi*fs*t)
wavfile.write("A440.wav",samplerate,a440.astype(np.float32))

plt.plot(t,a440)
plt.xlabel("Time[s]")
plt.ylabel("Amplitude")
#ajuste do eixo horizontal

x_max = 2/440
#x_max = 2

plt.xlim(0,x_max)
plt.show()
IPython.display.Audio("A440.wav")

#variacao dos parametros
fs = 200

data = A*np.sin(2*np.pi*fs*t)
wavfile.write("teste.wav",samplerate,data.astype(np.float32))
IPython.display.Audio("teste.wav")

#interferencia de ondas
fs = 440
A=0.5
data = A*np.sin(2*np.pi*fs*t)
data = data+ A*np.sin(2*np.pi*(3*fs)*t)
wavfile.write("teste.wav",samplerate,data.astype(np.float32))

plt.plot(t,data)
plt.xlabel("Time[s]")
plt.ylabel("Amplitude")
x_max = 2/440
#x_max = 2

plt.xlim(0,x_max)
plt.show()
IPython.display.Audio("teste.wav")

""" Fenômeno do batimento. Ao combinar duas ondas com frequências próximas, veremos como elas interagem e geram um padrão de amplitude variável."""

fs = 440
A=0.5
batimento = A*np.cos(2*np.pi*fs*t)
batimento = batimento + A*np.cos(2*np.pi*(fs+1)*t)
wavfile.write("som.wav",samplerate,batimento.astype(np.float32))

plt.plot(t,batimento)
plt.xlabel("Time[s]")
plt.ylabel("Amplitude")
x_max = 2/440
#x_max = 2

plt.xlim(0,x_max)
plt.show()
IPython.display.Audio("som.wav")