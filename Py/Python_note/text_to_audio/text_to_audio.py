# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'TextToAudio.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

# pip install PyQt5

""" 
o objetivo desse projeto é criar um programa que transforme texto em áudio
e que salve o texto em um arquivo txt
A utilidade desse projeto é para pessoas com deficiência visual e tambem auxiliar na leitura de textos longos
   """
from PyQt5 import QtCore, QtGui, QtWidgets
from gtts import gTTS
import os


linguagem = "pt"

class Ui_TextToAudio(object):
    def setupUi(self, TextToAudio):
        TextToAudio.setObjectName("TextToAudio")
        TextToAudio.resize(608, 589)
        TextToAudio.setStyleSheet("background-color:rgb(235, 243, 232)\n"
"")
        self.centralwidget = QtWidgets.QWidget(TextToAudio)
        self.centralwidget.setObjectName("centralwidget")
        self.input_texto = QtWidgets.QTextEdit(self.centralwidget)
        self.input_texto.setGeometry(QtCore.QRect(10, 90, 571, 351))
        self.input_texto.setObjectName("input_texto")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(150, 30, 261, 41))
        self.label.setStyleSheet("background-color: rgb(115, 144, 114);\n"
"color: white;\n"
"font-weight: bold;\n"
"\n"
"border-style: solid;\n"
"border-width: 1px;\n"
"border-color: #ccc;\n"
"border-radius: 10px;")
        self.label.setObjectName("label")
        self.btn_rodar = QtWidgets.QPushButton(self.centralwidget)
        self.btn_rodar.setGeometry(QtCore.QRect(110, 460, 111, 31))
        self.btn_rodar.setStyleSheet("background-color: rgb(115, 144, 114);\n"
"color: white;\n"
"font-weight: bold;\n"
"\n"
"\n"
"  border-radius: 10px;\n"
"  border-style: solid;\n"
"  border-width: 1px;\n"
"  border-color: #ccc;\n"
" \n"
"\n"
"")
        self.btn_rodar.setObjectName("btn_rodar")
        self.btn_save_txt = QtWidgets.QPushButton(self.centralwidget)
        self.btn_save_txt.setGeometry(QtCore.QRect(240, 460, 111, 31))
        self.btn_save_txt.setStyleSheet("background-color: rgb(115, 144, 114);\n"
"color: white;\n"
"font-weight: bold;\n"
"\n"
"\n"
"  border-radius: 10px;\n"
"  border-style: solid;\n"
"  border-width: 1px;\n"
"  border-color: #ccc;\n"
" \n"
"\n"
"")
        self.btn_save_txt.setObjectName("btn_save_txt")
        self.btn_sair = QtWidgets.QPushButton(self.centralwidget)
        self.btn_sair.setGeometry(QtCore.QRect(370, 460, 111, 31))
        self.btn_sair.setStyleSheet("background-color: rgb(115, 144, 114);\n"
"color: white;\n"
"font-weight: bold;\n"
"\n"
"\n"
"  border-radius: 10px;\n"
"  border-style: solid;\n"
"  border-width: 1px;\n"
"  border-color: #ccc;\n"
" \n"
"\n"
"")
        self.btn_sair.setObjectName("btn_sair")
        TextToAudio.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(TextToAudio)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 608, 21))
        self.menubar.setObjectName("menubar")
        TextToAudio.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(TextToAudio)
        self.statusbar.setObjectName("statusbar")
        TextToAudio.setStatusBar(self.statusbar)

        self.retranslateUi(TextToAudio)
        self.btn_sair.clicked.connect(TextToAudio.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(TextToAudio)

        self.btn_rodar.clicked.connect(self.rodar) # type: ignore
        self.btn_save_txt.clicked.connect(self.save_txt)


    def retranslateUi(self, TextToAudio):
        _translate = QtCore.QCoreApplication.translate
        TextToAudio.setWindowTitle(_translate("TextToAudio", "Text To Audio"))
        self.label.setText(_translate("TextToAudio", " Texto para áudio - Informe o texto abaixo:"))
        self.btn_rodar.setText(_translate("TextToAudio", "Rodar"))
        self.btn_save_txt.setText(_translate("TextToAudio", "Salvar Texto"))
        self.btn_sair.setText(_translate("TextToAudio", "Sair"))


    def rodar(self):
        texto = self.input_texto.toPlainText()
        text_to_sound = gTTS(texto, lang=linguagem)
        text_to_sound.save("audio.mp3")
        os.system('ffplay -autoexit -nodisp audio.mp3')

    def save_txt(self):
        texto = self.input_texto.toPlainText()
        with open('texto.txt', 'w') as f:
            f.write(texto)
        f.close()
        





if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    TextToAudio = QtWidgets.QMainWindow()
    ui = Ui_TextToAudio()
    ui.setupUi(TextToAudio)
    TextToAudio.show()
    sys.exit(app.exec_())