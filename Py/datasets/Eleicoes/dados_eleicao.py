# -*- coding: utf-8 -*-
"""dados eleicao.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-FukA90w19-uuAGi687geEyk-Rt_Hy3k
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
# %matplotlib inline
import numpy as np
import matplotlib.pyplot as plt
import geopandas as gpd

!pip install geopandas

"""# eleicoes 2018

"""

df_mapa = gpd.read_file("BR_Municipios_2022.shp",encoding="latin1")

df_mapa.head()

#verificando tamanho e colunas
df_mapa.info()

#exibir o mapa(plotar shapefile)
df_mapa.plot()

fig,ax = plt.subplots(1,figsize=(12,12))

#DESENHAR MAPA
df_mapa.plot(ax=ax)

plt.show()

#carregar arquivo com o resultado da eleicao
df_votacao = pd.read_csv("votacao_candidato_munzona_2018_BR.csv",
                        sep=";",encoding="latin1")
df_votacao.head()

df_votacao.head().T

#separar dados do 2 turno
df_votacao=df_votacao[df_votacao["NR_TURNO"]==2]
df_votacao.sample(3).T

df_votacao["CD_MUNICIPIO"].nunique()

#mas o brasil tem 5570 municipios
df_votacao[df_votacao["SG_UF"]=="ZZ"].sample(4).T

#Qnts cidades de fora do brasil estao no dataset
df_votacao[df_votacao["SG_UF"]=="ZZ"]["CD_MUNICIPIO"].nunique()

#eliminar cidades do exterior
df_votacao = df_votacao[df_votacao["SG_UF"] != "ZZ"]

df_votacao["CD_MUNICIPIO"].nunique()

df_votacao.head()

#eliminar algumas colunas
df_votacao = df_votacao[["SG_UF","CD_MUNICIPIO","NM_MUNICIPIO",
"NR_CANDIDATO","NM_URNA_CANDIDATO","QT_VOTOS_NOMINAIS"]]

df_votacao.head()

#agregar os dados por municipio
df_votacao.groupby(["SG_UF","CD_MUNICIPIO","NM_MUNICIPIO","NM_URNA_CANDIDATO"]).sum()

#agregar os dados por municipio
df_votacao = df_votacao.groupby(["SG_UF","CD_MUNICIPIO","NM_MUNICIPIO","NM_URNA_CANDIDATO"]).sum().reset_index()

df_votacao.sample(4)

#ordenar o df pela qntd de votos e dps deixar apenas o primeiro, o maior candidato de cada cidade
df_votacao.sort_values(by="QT_VOTOS_NOMINAIS",ascending=False).head(10)

df_votacao.sort_values(by="QT_VOTOS_NOMINAIS",ascending=False,inplace=True)
#dropar linhas duplicadas
df_votacao.drop_duplicates(subset="CD_MUNICIPIO",keep="first",inplace=True)

df_votacao.head(10)

df_votacao.head(10)

#Agora vamos criar uma coluna q representa o resultado da eleicao
#Bolsonaro seria o true e Haddad o false
df_votacao["RESULTADO"] = df_votacao["NM_URNA_CANDIDATO"].apply(lambda x: x =="JAIR BOLSONARO")

df_votacao.head(10)

df_votacao[df_votacao["NM_MUNICIPIO"] == "BELO HORIZONTE"]

df_votacao.dtypes

df_mapa.head(3)

#linkar cod tse e cod ibge via github do estadao
link = "https://raw.githubusercontent.com/estadao/como-votou-sua-vizinhanca/master/data/votos/correspondencia-tse-ibge.csv"
df_equivalencia = pd.read_csv(link)

df_equivalencia.head(10)

#reindexacao df_votacao pelo cod do tse
df_vot_novo = df_votacao.copy()

df_vot_novo.set_index("CD_MUNICIPIO",drop=False,inplace=True)
df_vot_novo.head()

df_equi_novo = df_equivalencia.copy()

df_equi_novo.set_index("COD_TSE",drop=False,inplace=True)
df_equi_novo.head()

#verificando tamanho
df_vot_novo.info()

df_equi_novo.info()

df_voto_equi = df_vot_novo.join(df_equi_novo)
df_voto_equi.head()

df_voto_equi.info()

df_mapa.info()

df_mapa.head()

df_voto_equi["GEOCOD_IBGE"] = df_voto_equi["GEOCOD_IBGE"].astype(str)
df_voto_equi.info()

#unificar df mapa com df votacao/equivalencia
#unificar os indices
df_mapa.set_index("CD_MUN",drop=False,inplace=True)

df_mapa.head()

df_voto_equi.set_index("GEOCOD_IBGE",drop=False,inplace=True)

#juntando os data frames
df_mapa_novo = df_mapa.join(df_voto_equi)
df_mapa_novo.head().T

df_mapa_novo["QT_VOTOS_NOMINAIS"].nlargest(5)

df_mapa_novo.loc["2927408"]

df_mapa_novo.info()

#descobrir 2 municipios a mais no mapa
df_mapa_novo[df_mapa_novo["NR_CANDIDATO"].isnull()]

df_mapa_novo.info()

#vamos desenhar o mapa (false = 0 ; true = 1 green
from matplotlib.colors import ListedColormap
from matplotlib.colors import LinearSegmentedColormap
#cmap = ListedColormap=(['red',"green", "blue", "k"])

fig,ax = plt.subplots(1,figsize=(12,12))

cmap = LinearSegmentedColormap.from_list('custom_colormap', ['red', 'green', 'green', 'green'])
ax = df_mapa_novo.plot(column="RESULTADO",cmap=cmap,legend=True,linewidth=1,ax=ax,edgecolor="grey")

ax.set_axis_off()

ax.set_title("resultado eleicao 2018 segundo turno",fontdict={"fontsize" :"25", "fontweight" : "3"})

plt.show()

